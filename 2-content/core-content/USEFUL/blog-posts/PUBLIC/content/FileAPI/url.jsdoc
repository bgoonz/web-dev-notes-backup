URL : Object

Provides methods to generate a url for
a %%/Blob|**Blob**%% so locally generated 
content can be passed to APIs that accept urls.

Spec:
http://www.w3.org/TR/FileAPI/#URL-object

----
createObjectURL(blob : Blob) : String

Creates a url for the specified **blob** that can be passed to 
methods that expect a url. When done with the returned url, call
%%#revokeObjectURL|**revokeObjectURL()**%% to free the resources
associated with the created url.

<htmlexample>
<!-- Creates a Worker using a local script instead of a remote url -->
<script id='code' type='text/plain'>
  postMessage('foo');
</script>
<script>
  var code = document.getElementById('code').textContent;
  var blob = new Blob([code], { type: 'application/javascript' });
  var url = URL.createObjectURL(blob);
  var worker = new Worker(url);
  URL.revokeObjectURL(url);

  worker.onmessage = function(e) {
    console.log('worker returned: ', e.data);
  };
</script>
</htmlexample>

Spec:
http://www.w3.org/TR/FileAPI/#dfn-createObjectURL


----
revokeObjectURL(url : String) : undefined

Frees the resources associated with the **url** created by
%%#createObjectURL|**createObjectURL()**%%.

<htmlexample>
<!-- Creates a Worker using a local script instead of a remote url -->
<script id='code' type='text/plain'>
  postMessage('foo');
</script>
<script>
  var code = document.getElementById('code').textContent;
  var blob = new Blob([code], { type: 'application/javascript' });
  var url = URL.createObjectURL(blob);
  var worker = new Worker(url);
  URL.revokeObjectURL(url);

  worker.onmessage = function(e) {
    console.log('worker returned: ', e.data);
  };
</script>
</htmlexample>

Spec:
http://www.w3.org/TR/FileAPI/#dfn-revokeObjectURL
