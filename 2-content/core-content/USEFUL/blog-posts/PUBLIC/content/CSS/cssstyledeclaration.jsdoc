CSSStyleDeclaration : Object

CSSStyleDeclaration allows styling %%/HTMLElement|HTMLElement%%s. 

The %%HTMLElement#style|HTMLElement.style%% property contains 
the style rules directly set on the element.  

Use the 
%%Window#getComputedStyle|**window.getComputedStyle()**%% method
to get the computed style of an element.

Spec:
http://www.w3.org/TR/CSS/#properties

----
instance.cssText : String

The string of CSS rules of the style.

<htmlexample>
<span id='foo' style='color: red; font-weight: bold'>foo</span>
<script>
  var foo = document.getElementById('foo');
  console.log(foo.style.cssText);
</script>
</htmlexample>

----
instance.parentRule : String

----
instance.length : String

The number of rules set in the style.

<htmlexample>
<span id='foo' style='color: red; font-weight: bold'>foo</span>
<span id='bar' style='color: blue'>bar</span>
<script>
  var foo = document.getElementById('foo');
  console.log(foo.style.length);

  var bar = document.getElementById('bar');
  console.log(bar.style.length);
</script>
</htmlexample>

----
instance.alignmentBaseline : String

<htmlexample>
<svg id='svg' width='250' height='500' xmlns='http://www.w3.org/2000/svg' version='1.1'></svg>
<script>
  var svg = document.getElementById('svg');
 
  var alignmentBaselines = [
    'after-edge', 'alphabetic', 'auto', 'baseline',
    'before-edge', 'central', 'hanging', 'ideographic',
    'inherit', 'initial', 'mathematical', 'middle',
    'text-after-edge', 'text-before-edge'];

  alignmentBaselines.forEach(function(option, i) {
    
    var text = document.createElementNS('http://www.w3.org/2000/svg', 'text');
    text.setAttribute('y', (i + 1) * 30);

    var textNode = document.createTextNode('alignmentBaseline: ');
    text.appendChild(textNode);

    // Create a tspan that can be styled
    var tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');
    tspan.style.alignmentBaseline = option;

    textNode = document.createTextNode(option);
    tspan.appendChild(textNode);

    text.appendChild(tspan);

    svg.appendChild(text);
  });
</script>
</htmlexample>

Spec:
http://www.w3.org/TR/SVG/text.html#AlignmentBaselineProperty

CSSName:
alignment-baseline

----
instance.background : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#the-background

----
instance.backgroundAttachment : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#the-background-attachment

----
instance.backgroundClip : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#the-background-clip

----
instance.backgroundColor : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#the-background-color

----
instance.backgroundImage : String

The image to place in the background of the element. See also
%%#backgroundPosition|**backgroundPosition**%%,
%%#backgroundRepeat|**backgroundRepeat**%%,
and
%%#backgroundSize|**backgroundSize**%%.

<htmlexample>
<div id="element" style="height: 200px"></div>
<script>
  var element = document.getElementById('element');
  element.style.backgroundImage = 'url(/pic.jpg)';
</script>
</htmlexample>

Spec:
http://dev.w3.org/csswg/css-backgrounds/#the-background-image

----
instance.backgroundOrigin : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#the-background-origin

----
instance.backgroundPosition : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#the-background-position

----
instance.backgroundPositionX : String

----
instance.backgroundPositionY : String

----
instance.backgroundRepeat : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#background-repeat

----
instance.backgroundRepeatX : String

----
instance.backgroundRepeatY : String

----
instance.backgroundSize : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#background-size

----
instance.baselineShift : String

Spec:
http://www.w3.org/TR/SVG/text.html#BaselineShiftProperty

----
instance.border : String


Spec:
http://dev.w3.org/csswg/css-backgrounds/#border

----
instance.borderBottom : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#border-bottom

----
instance.borderBottomColor : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#border-bottom-color

----
instance.borderBottomLeftRadius : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#border-bottom-left-radius

----
instance.borderBottomRightRadius : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#border-bottom-right-radius

----
instance.borderBottomStyle : String

----
instance.borderBottomWidth : String

----
instance.borderCollapse : String

----
instance.borderColor : String

----
instance.borderImage : String

----
instance.borderImageOutset : String

----
instance.borderImageRepeat : String
----
instance.borderImageSlice : String
----
instance.borderImageSource : String
----
instance.borderImageWidth : String
----
instance.borderLeft : String
----
instance.borderLeftColor : String
----
instance.borderLeftStyle : String
----
instance.borderLeftWidth : String
----
instance.borderRadius : String
----
instance.borderRight : String
----
instance.borderRightColor : String
----
instance.borderRightStyle : String
----
instance.borderRightWidth : String
----
instance.borderSpacing : String
----
instance.borderStyle : String

Spec:
http://dev.w3.org/csswg/css-backgrounds/#border-style

----
instance.borderTop : String
----
instance.borderTopColor : String
----
instance.borderTopLeftRadius : String
----
instance.borderTopRightRadius : String
----
instance.borderTopStyle : String
----
instance.borderTopWidth : String
----
instance.borderWidth : String
----
instance.bottom : String
----
instance.boxShadow : String
----
instance.boxSizing : String
----
instance.captionSide : String
----
instance.clear : String
----
instance.clip : String
----
instance.clipPath : String

See %%/SVGClipPathElement|SVGClipPathElement%%.

----
instance.clipRule : String
----
instance.color : String
----
instance.colorInterpolation : String
----
instance.colorInterpolationFilters : String
----
instance.colorProfile : String
----
instance.colorRendering : String
----
instance.content : String
----
instance.counterIncrement : String
----
instance.counterReset : String
----
instance.cursor : String

The shape of the mouse cursor while over the styled element.

<htmlexample>
<body></body>
<script>
var cursorTypes = [
  'auto', 'none', 'alias', 'crosshair', 'default', 'hand', 'help',
  'context-menu', 'pointer', 'progress', 'wait', 'cell', 'copy',
  'no-drop', 'not-allowed', 'text', 'vertical-text', 'all-scroll',
  'move', 'col-resize', 'row-resize', 'n-resize', 'ne-resize', 
  'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize',
  'nw-resize', 'ew-resize', 'ns-resize', 'nwse-resize', 
  'nesw-resize', 'zoom-in', 'zoom-out', 
  'url(/favicon.ico), auto'];

cursorTypes.forEach(function(type) {
  var div = document.createElement('div');

  div.textContent = type;
  div.style.cursor = type;

  document.body.appendChild(div);
});
</script>
</htmlexample>
----
instance.direction : String
----
instance.display : String

See also %%/HTMLElement#hidden|**HTMLElement.hidden**%%.

----
instance.dominantBaseline : String

Spec:
http://www.w3.org/TR/SVG/text.html#DominantBaselineProperty
----
instance.emptyCells : String
----
instance.enableBackground : String
----
instance.fill : String
----
instance.fillOpacity : String
----
instance.fillRule : String
----
instance.filter : String
----
instance.float : String
----
instance.floodColor : String
----
instance.floodOpacity : String
----
instance.font : String
----
instance.fontFamily : String
----
instance.fontSize : String
----
instance.fontStretch : String
----
instance.fontStyle : String
----
instance.fontVariant : String

Must be one of **'normal'**, **'small-caps'**, **'initial'** or
**'inherit'**.

----
instance.fontWeight : String
----
instance.glyphOrientationHorizontal : String
----
instance.glyphOrientationVertical : String
----
instance.height : String
----
instance.imageRendering : String
----
instance.kerning : String
----
instance.left : String
----
instance.letterSpacing : String
----
instance.lightingColor : String
----
instance.lineHeight : String
----
instance.listStyle : String
----
instance.listStyleImage : String
----
instance.listStylePosition : String
----
instance.listStyleType : String
----
instance.margin : String
----
instance.marginBottom : String
----
instance.marginLeft : String
----
instance.marginRight : String
----
instance.marginTop : String
----
instance.marker : String
----
instance.markerEnd : String
----
instance.markerMid : String
----
instance.markerStart : String
----
instance.mask : String
----
instance.maxHeight : String
----
instance.maxWidth : String
----
instance.minHeight : String
----
instance.minWidth : String
----
instance.objectFit : String

Applies to %%/HTMLImageElement|**<img>**%%
and %%/HTMLVideoElement|**<video>**%%
elements. 

Determines how the content of the element fits 
inside its CSS layout box.  Similar to how
%%#backgroundSize|**backgroundSize**%%
affects how the
%%#backgroundImage|**backgroundImage**%%.

Must be one of 
**'fill'**,
**'contain'**,
**'cover'**,
**'none'**,
or
**'scale-down'**.

See also
%%#objectPosition|**objectPosition**%%.

<htmlexample>
<style>
  img {
    width: 60px;
    height: 130px;
    background: #eee;
    border: 1px solid gray;
    padding: 3px;
    vertical-align: middle;    
  }
  span {
    display: inline-block;
    width: 80px;
    text-align: right;
    margin-right: 10px;
  }
</style>
<div id='container'></div>
<script>
  var fits = ['fill', 'contain', 'cover', 'none', 'scale-down'];

  fits.forEach(function(fit, i) {
    document.getElementById('container').insertAdjacentHTML('beforeend', 
      '<span>' + fit + ' </span>' +
      '<img src="/pic.jpg" style="object-fit: ' + fit + ';"><br>');
  });
</script>
</htmlexample>

Spec:
http://www.w3.org/TR/css3-images/#object-fit

----
instance.objectPosition : String

Applies to %%/HTMLImageElement|**<img>**%%
and %%/HTMLVideoElement|**<video>**%%
elements. 

Specifies the X and Y positions of where the content of 
the element fits inside its CSS layout box.  Similar to how
%%#backgroundPosition|**backgroundPosition**%%
affects how the
%%#backgroundImage|**backgroundImage**%%.

See also
%%#objectFit|**objectFit**%%.

<htmlexample>
<style>
  img {
    width: 60px;
    height: 130px;
    background: #eee;
    border: 1px solid gray;
    padding: 3px;
  }
</style>
<table id='table'>
  <tr>
    <th>position</th>
    <th>fit=contain</th>
    <th>fit=cover</th>
  </tr>
</table>
<script>
  var positions = ['0% 0%', '50% 50%', '100% 100%'];

  positions.forEach(function(position, i) {
    document.getElementById('table').insertAdjacentHTML('beforeend', 
      '<tr>' +
        '<td>' + position + ' </td>' +
        '<td><img src="/pic.jpg" style="object-position:' + position + '; object-fit: contain;"></td>'+
        '<td><img src="/pic.jpg" style="object-position:' + position + '; object-fit: cover;"></td>' +
      '</tr>');
  });
</script>
</htmlexample>

Spec:
http://www.w3.org/TR/css3-images/#object-position

----
instance.opacity : String
----
instance.orphans : String
----
instance.outline : String
----
instance.outlineColor : String
----
instance.outlineOffset : String
----
instance.outlineStyle : String
----
instance.outlineWidth : String
----
instance.overflow : String
----
instance.overflowX : String
----
instance.overflowY : String
----
instance.padding : String
----
instance.paddingBottom : String
----
instance.paddingLeft : String
----
instance.paddingRight : String
----
instance.paddingTop : String
----
instance.page : String
----
instance.pageBreakAfter : String
----
instance.pageBreakBefore : String
----
instance.pageBreakInside : String
----
instance.pointerEvents : String
----
instance.position : String
----
instance.quotes : String
----
instance.resize : String
----
instance.right : String
----
instance.shapeRendering : String
----
instance.size : String
----
instance.speak : String
----
instance.src : String
----
instance.stopColor : String
----
instance.stopOpacity : String
----
instance.stroke : String
----
instance.strokeDasharray : String
----
instance.strokeDashoffset : String
----
instance.strokeLinecap : String
----
instance.strokeLinejoin : String
----
instance.strokeMiterlimit : String
----
instance.strokeOpacity : String
----
instance.strokeWidth : String
----
instance.tabSize : String
----
instance.tableLayout : String
----
instance.textAlign : String
----
instance.textAnchor : String
----
instance.textDecoration : String
----
instance.textIndent : String
----
instance.textLineThrough : String
----
instance.textLineThroughColor : String
----
instance.textLineThroughMode : String
----
instance.textLineThroughStyle : String
----
instance.textLineThroughWidth : String
----
instance.textOverflow : String
----
instance.textOverline : String
----
instance.textOverlineColor : String
----
instance.textOverlineMode : String
----
instance.textOverlineStyle : String
----
instance.textOverlineWidth : String
----
instance.textRendering : String
----
instance.textShadow : String
----
instance.textTransform : String
----
instance.textUnderline : String
----
instance.textUnderlineColor : String
----
instance.textUnderlineMode : String
----
instance.textUnderlineStyle : String
----
instance.textUnderlineWidth : String
----
instance.top : String
----
instance.unicodeBidi : String
----
instance.unicodeRange : String
----
instance.vectorEffect : String
----
instance.verticalAlign : String
----
instance.visibility : String
----
instance.whiteSpace : String
----
instance.widows : String
----
instance.width : String
----
instance.wordBreak : String
----
instance.wordSpacing : String
----
instance.wordWrap : String
----
instance.writingMode : String
----
instance.zIndex : String
----
instance.zoom : String


----
instance.alignContent : String
----
instance.alignItems : String
----
instance.alignSelf : String
----
instance.all : String
----
instance.animation : String
----
instance.animationDelay : String
----
instance.animationDirection : String
----
instance.animationDuration : String
----
instance.animationFillMode : String
----
instance.animationIterationCount : String
----
instance.animationName : String
----
instance.animationPlayState : String
----
instance.animationTimingFunction : String
----
instance.backfaceVisibility : String
----
instance.backgroundBlendMode : String
----
instance.bufferedRendering : String
----
instance.cx : String
----
instance.cy : String
----
instance.flex : String
----
instance.flexBasis : String
----
instance.flexDirection : String
----
instance.flexFlow : String
----
instance.flexGrow : String
----
instance.flexShrink : String
----
instance.flexWrap : String
----
instance.fontKerning : String
----
instance.fontVariantLigatures : String
----
instance.isolation : String
----
instance.justifyContent : String
----
instance.maskType : String
----
instance.maxZoom : String
----
instance.minZoom : String
----
instance.mixBlendMode : String
----
instance.motion : String
----
instance.motionOffset : String
----
instance.motionPath : String
----
instance.motionRotation : String
----
instance.objectFit : String
----
instance.objectPosition : String
----
instance.order : String
----
instance.orientation : String
----
instance.overflowWrap : String
----
instance.paintOrder : String
----
instance.perspective : String
----
instance.perspectiveOrigin : String
----
instance.r : String
----
instance.rx : String
----
instance.ry : String
----
instance.shapeImageThreshold : String
----
instance.shapeMargin : String
----
instance.shapeOutside : String
----
instance.touchAction : String
----
instance.transform : String
----
instance.transformOrigin : String
----
instance.transformStyle : String
----
instance.transition : String
----
instance.transitionDelay : String
----
instance.transitionDuration : String
----
instance.transitionProperty : String
----
instance.transitionTimingFunction : String
----
instance.userZoom : String
----
instance.willChange : String
----
instance.x : String
----
instance.y : String
----
instance.blockSize : String
----
instance.borderBlockEnd : String
----
instance.borderBlockStart : String
----
instance.borderBlockEndColor : String
----
instance.borderBlockEndStyle : String
----
instance.borderBlockEndWidth : String
----
instance.borderBlockStartColor : String
----
instance.borderBlockStartStyle : String
----
instance.borderBlockStartWidth : String
----
instance.borderInlineEnd : String
----
instance.borderInlineEndColor : String
----
instance.borderInlineEndStyle : String
----
instance.borderInlineEndWidth : String
----
instance.borderInlineStart : String
----
instance.borderInlineStartColor : String
----
instance.borderInlineStartStyle : String
----
instance.borderInlineStartWidth : String
----
instance.boxDecorationBreak : String
----
instance.cssFloat : String
----
instance.fontFeatureSettings : String
----
instance.fontLanguageOverride : String
----
instance.fontSizeAdjust : String
----
instance.fontSynthesis : String
----
instance.fontVariantAlternates : String
----
instance.fontVariantCaps : String
----
instance.fontVariantEastAsian : String
----
instance.fontVariantNumeric : String
----
instance.fontVariantPosition : String
----
instance.imageOrientation : String
----
instance.imeMode : String
----
instance.inlineSize : String
----
instance.marginBlockEnd : String
----
instance.marginBlockStart : String
----
instance.marginInlineEnd : String
----
instance.marginInlineStart : String
----
instance.markerOffset : String
----
instance.maxBlockSize : String
----
instance.maxInlineSize : String
----
instance.minBlockSize : String
----
instance.minInlineSize : String
----
instance.offsetBlockEnd : String
----
instance.offsetBlockStart : String
----
instance.offsetInlineEnd : String
----
instance.offsetInlineStart : String
----
instance.paddingBlockEnd : String
----
instance.paddingBlockStart : String
----
instance.paddingInlineEnd : String
----
instance.paddingInlineStart : String
----
instance.rubyAlign : String
----
instance.rubyPosition : String
----
instance.scrollBehavior : String
----
instance.scrollSnapCoordinate : String
----
instance.scrollSnapDestination : String
----
instance.scrollSnapPointsX : String
----
instance.scrollSnapPointsY : String
----
instance.scrollSnapType : String
----
instance.scrollSnapTypeX : String
----
instance.scrollSnapTypeY : String
----
instance.textDecorationColor : String
----
instance.textDecorationLine : String
----
instance.textDecorationStyle : String
----
instance.textOrientation : String
----
instance.transformBox : String
----
instance.hyphens : String

----
prototype.getPropertyValue(name : String) : String

Gets the value of the specified CSS property/variable.

<htmlexample>
<style>
  div {
    --my-property: red;
    color: var(--my-property);
  }
</style>
<div>div with property</div>
<script>
  const div = document.querySelector('div');
  const computedStyle = getComputedStyle(div);
  console.log(computedStyle.getPropertyValue('--my-property'));
  console.log(computedStyle.getPropertyValue('color'));
</script>
</htmlexample>

----
prototype.setPropertyValue(name : String, value : String, [priority : String]) : String

Sets the value of the specified CSS property/variable. If specified, **priority** must be one of **'important'** or **''**.

<htmlexample>
<style>
  div {
    --my-property: red;
    color: var(--my-property);
  }
</style>
<div>div with property</div>
<script>
  const div = document.querySelector('div');
  div.style.setProperty('--my-property', 'blue');

  // The following are equivalent:
  div.style.setProperty('font-size', '2em');
  div.style.fontSize = '2em';
</script>
</htmlexample>
